官方:
  - 官网 https://webpack.js.org/
  - 官方插件 https://webpack.js.org/plugins/
  - 第三方插件 https://www.npmjs.com/package/css-loader
wenpack介绍:
  - 能够实现压缩(js css)，编译(vue react less sass)，语法兼容转换(es6-es5)
  - 创建的打包工具有，【Webpack Vite】 Grunt Gulp Parcel Rollup
  - Webpack是一个静态资源打包工具，它会以一个或多个文件作为打包入口，将我们整个项目所有文件编译组合成一个或多个文件的输出，我们将Webpack输出的文件叫做bundle
webpack模式:
  开发模式: 仅能编译JS中分的ES Module语法
  生产模式: 能编译JS中的ES Module语法，还能压缩JS代码
安装webpack:
  - "
    1.安装node
    2.初始化node工程项目
      npm init -y
    3.安装webpack
      全局安装
        npm i webpack webpack-cli -g
        webpack -v
      局部安装(推荐)
        npm i webpack webpack-cli --save-dev
        npx webpack -v
    4.打包命令
      npx webpack
      npx webpack -w/--watch 可以监测js文件发生变化实时打包
  "
webpack-5大核心配置:
  - entry 指定从哪个入口文件开发打包
  - output 指定打包完成文件输出到什么位置
  - loader webpack本身只能处理js,json等资源，其他资源需要借助第三方loader进行解析
  - plugins 扩展webpack功能
  - mode 生产模式production 开发模式development

Loader原理:
  功能:
    - 帮助webpack将不同类型的文件转换为webpack可识别的模块
    - loader-api https://webpack.docschina.org/api/loaders/#thiscallback
  分类:
    - pre 前置loader
    - normal 普通loader(默认)
    - inline内联loader
    - post 后置loader
  执行顺序:
    - pre > normal > inline > post
    - 相同优先级的loader执行顺序为 从右到左，从下到上
  使用:
    - "
      inline内联loader(行内定义的)
      {
          enforce: 'pre',
          test: /\.(txt|vue)$/,
          type: 'asset/source', //以原格式输出，并且保存在bundle文件中
      }
      {
          enforce: 'normal',
          test: /\.(txt|vue)$/,
          type: 'asset/source', //以原格式输出，并且保存在bundle文件中
      }
      {
          enforce: 'post',
          test: /\.(txt|vue)$/,
          type: 'asset/source', //以原格式输出，并且保存在bundle文件中
      }
    "
Plugin原理:
  功能:
    - 通过插件我们可以扩展webpack，加入自定义的构建行为，使webpack可以执行更广泛的任务，拥有更强的构建能力
    - wenpack就像一条生产线，要经过一系列处理流程后才能将源文件转换成输出结果。
    - 这条生产线上的每个处理流程职责都是单一的，多个流程之间有存在依赖关系，只有完成当前处理后才能交给下一个流程处理。
    - 插件就像是一个插入到生产线中的一个功能，在特定的时机对生产线上的资源做处理。
    - webpack通过Tapable来组织这条复杂的生产线。
    - webpack在运行过程中会广播事件，插件只需要监听它所关心的事件，就能加入到这条生产线中，区改变生产线的运作。
    - webpack的事件流机制保证了插件的有序性，使得整个系统扩展性很好。
    - webpack插件类似于maven中的插件绑定事件。在固定的时间点触发到该插件的执行。webpack会在整个打包流程中提供很多钩子，让插件作为切入点进行处理。
    - 插件钩子文档 https://webpack.docschina.org/api/compiler-hooks/#entryoption
  Tapable:
    - tap 可以注册同步钩子和异步钩子
    - tapAsync 回调方式注册异步钩子
    - tapPromise Promise方式注册异步钩子
