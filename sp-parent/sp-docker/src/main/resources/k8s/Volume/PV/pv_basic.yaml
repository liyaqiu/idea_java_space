#yum install -y nfs-utils
#mkdir -p /root/k8s/data
#mkdir -p /root/k8s/{pv1,pv2,pv3}
#将共享目录读写权限暴露给192.168.88.0/24网段
#echo "/root/k8s/data 192.168.88.0/24(rw,no_root_squash)" >> /etc/exports
#echo "/root/k8s/pv1 192.168.88.0/24(rw,no_root_squash)" >> /etc/exports
#echo "/root/k8s/pv2 192.168.88.0/24(rw,no_root_squash)" >> /etc/exports
#echo "/root/k8s/pv3 192.168.88.0/24(rw,no_root_squash)" >> /etc/exports
#systemctl start nfs
#systemctl reload nfs
#官方文档 https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv1
  labels:
    pv: hangzhou
    env: test
spec:
  #存储容量
  capacity:
    storage: 1Gi #Ki | Mi | Gi | Ti | Pi | Ei
  #访问模式
  #ReadWriteOnce(RWO) 卷可以被一个节点以读写方式挂载。 ReadWriteOnce 访问模式也允许运行在同一节点上的多个 Pod 访问卷。
  #ReadOnlyMany(ROX) 卷可以被多个节点以只读方式挂载。
  #ReadWriteMany(RWX) 卷可以被多个节点以读写方式挂载。
  #ReadWriteOncePod(RWOP ) 卷可以被单个 Pod 以读写方式挂载。 如果你想确保整个集群中只有一个 Pod 可以读取或写入该 PVC， 请使用ReadWriteOncePod 访问模式。这只支持 CSI 卷以及需要 Kubernetes 1.22 以上版本。
  #重要提醒！ 每个卷同一时刻只能以一种访问模式挂载，即使该卷能够支持 多种访问模式。例如，一个 GCEPersistentDisk 卷可以被某节点以 ReadWriteOnce 模式挂载，或者被多个节点以 ReadOnlyMany 模式挂载，但不可以同时以两种模式 挂载。
  accessModes:
    - ReadWriteMany
  #回收策略
  #Retain(保留),当 PersistentVolumeClaim 对象 被删除时，PersistentVolume 卷仍然存在，对应的数据卷被视为"已释放（released）
  #Recycle(回收),删除权由k8s来处理，相当于k8s执行了(rm -rf /thevolume/*)
  #Delete(删除),删除权交由第三方处理，具体怎么删除看第三方(nfs,WS EBS,GCE PD,Azure Disk)删除策略
  persistentVolumeReclaimPolicy: Retain
  #存储类别(不常用) 作为附加描述磁盘的信息，可以用于匹配的附加选项
  #设定具体类别的PV 只能和设定具体类别的PVC绑定
  #未设定具体类别的PV 只能和未设定具体类别的PVC绑定
  #storageClassName: slow
  nfs:
    path: /root/data/pv1
    server: 192.168.88.10

#pv状态
#Availabel(可用) 全新的PV
#Bound(已绑定) 表示PV已经PVC绑定了
#Released(已释放) 表示被PVC使用过，数据还在集群中,这种状态需要管理人确认后，重新发布才能进行pvc绑定了
#Failed(失败) 表示PV自动回收失败